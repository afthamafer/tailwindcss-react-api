[{"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\index.js":"1","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\App.js":"2","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\reportWebVitals.js":"3","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\Content.js":"4","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\Header.js":"5","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\TodoList.js":"6","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\firebase.js":"7","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\Weather.js":"8"},{"size":587,"mtime":1610445935314,"results":"9","hashOfConfig":"10"},{"size":302,"mtime":1610541498975,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3446,"mtime":1610705238511,"results":"13","hashOfConfig":"10"},{"size":395,"mtime":1610461883849,"results":"14","hashOfConfig":"10"},{"size":1412,"mtime":1610705318524,"results":"15","hashOfConfig":"10"},{"size":568,"mtime":1610461964981,"results":"16","hashOfConfig":"10"},{"size":2468,"mtime":1610705919106,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"14z5djl",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\index.js",[],["39","40"],"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\App.js",[],"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\reportWebVitals.js",[],"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\Content.js",["41"],"import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport Weather from './Weather';\r\n\r\nclass Content extends React.Component {\r\n\r\n    componentDidMount() {\r\n      \r\n        this.initWeatherApi()\r\n        this.initClock()\r\n\r\n\r\n    }\r\n\r\n\r\n    initWeatherApi() {      \r\n\r\n    }\r\n\r\n\r\n    initClock() {\r\n\r\n        //weergeven dag uit array\r\n        var dag = new Date().getDay();\r\n        var week = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n        var dagnaam = week[dag];\r\n\r\n        //weergeven maand uit array\r\n        var maand = new Date().getMonth();\r\n        var maandArray = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n        var maandNaam = maandArray[maand];\r\n\r\n\r\n        //weergeven datum en tijd\r\n        //als de minuten kleiner is dan 10 voeg een 0 toe voor dat getal\r\n        //example 12:4  wordt 12:04\r\n\r\n        var today = new Date();\r\n        var date = today.getDate();\r\n        var time = today.getHours() + \":\" + (today.getMinutes() < 10 ? '0' : '') + today.getMinutes();\r\n        var dateTime = date + ' ' + time;\r\n        document.getElementById(\"date\").innerHTML = dagnaam + \" \" + date + \"th \" + maandNaam;\r\n        document.getElementById('time').innerHTML = time;\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <div>\r\n                <nav>\r\n\r\n\r\n                    <div className=\"flex justify-center items-center min-h-screen\">\r\n                        <div className=\"flex-1 max-w-7xl p-16\">\r\n                            <div className=\"grid grid-cols-2 grid-rows-3 gap-2 grid-flow-row-dense lg:grid-cols-2\">\r\n\r\n                                <div className=\"p-4 pr-6 bg-yellow-600 border-1-8 border-transparent rounded-md\">\r\n                                 \r\n                                \r\n                                    <h2 className=\"text-3xl font-semibold leading-6 text-center\">Check out the weather</h2>\r\n                                    <p className=\"text-gray-600\" id=\"weather\"> <Weather></Weather></p>\r\n                                </div>\r\n\r\n                                <div className=\"p-4 pr-6 bg-purple-400 border-1-8 text-center border-transparent rounded-md\">\r\n                                    <h2 className=\"text-3xl font-semibold leading-6 text-center\">Date & Time</h2>\r\n        \r\n                                    <p className=\"text-black-100 text-center\" id=\"date\"></p>\r\n                                    <p className=\"text-black-100 text-center font-sans md:text-5xl sm:text-xl\" id=\"time\">Tijd</p>\r\n\r\n                                    <svg className=\" mx-auto w-14 h-14 text-center object-none object-center text-gray-200 items-center\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" /></svg>\r\n\r\n\r\n                                </div>\r\n\r\n                                <div className=\" col-span-2 p-4 pr-6 bg-green-400 border-1-8 border-transparent rounded-md\">\r\n                                    <TodoList></TodoList>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n\r\n\r\n\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default Content","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\Header.js",[],"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\TodoList.js",["42"],"import React from 'react';\nimport firebase from '../firebase';\n\nclass TodoList extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: []\n        };\n\n    }\n\n    componentDidMount() {\n        // uitvoeren nadat component gemount is  \n        this.refreshList()\n    }\n\n    // functie die data uit database haalt\n    async refreshList() {\n        const db = firebase.firestore();\n\n        // items ophalen\n        const data = await db.collection('spells').get().then((data) => {\n            // dit uitvoeren wanneer het resultaat binnenkomt:\n\n            // 1. lege array aanmaken\n            var dbItems = [];\n\n            // 2. documenten uit firestore loopen\n            data.forEach(doc => {\n                // 3. elk resultaat toevoegen aan array\n                dbItems.push(doc.data().name)\n            })\n\n            // 4. state updaten (this.state.items updaten naar nieuwe lijst => react update vervolgens de weergave)\n            this.setState({ items: dbItems })\n        })\n    }\n\n\n    render() {\n        return <div>\n            <h2 className=\"text-3xl font-semibold leading-6 text-center\">Takenlijst</h2>\n            <br></br><br></br>\n            <ul>\n                {this.state.items.map((item) => <li key={item.toString()}>{item}</li>)}\n            </ul>\n            <br></br><br></br>\n        </div>;\n    }\n}\n\nexport default TodoList","C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\firebase.js",[],["43","44"],"C:\\Users\\oteme\\Documents\\tailwindcss-react-v1\\src\\components\\Weather.js",["45"],"import React from 'react';\nimport firebase from '../firebase';\n\nclass Weather extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: '',\n            weather: {}\n        };\n\n        // dit is nodig om \"this\" beschikbaar te maken binnen de refreshWeather functie\n        this.refreshWeather = this.refreshWeather.bind(this);\n\n    }\n\n\n\n    // functie die weer-data ophaalt en weergeeft\n    async refreshWeather(evt) {\n\n        if (evt.key === \"Enter\") {\n            const api = {\n                key: \"085caf37b86251befe096a3966e0f79e\",\n                base: \"https://api.openweathermap.org/data/2.5/\"\n            }\n\n            // api aanroepen\n            fetch(`${api.base}weather?q=${this.state.query}&units=metric&APPID=${api.key}`)\n                .then(res => res.json())\n                .then(result => {\n                    // state updaten:\n                    this.setState({weather:result})\n                });\n        }\n    }\n\n\n    render() {\n        return <div>\n            <h2 className=\"text-lg text-purple-300 font-semibold leading-6 text-center\">&nbsp;</h2>\n            <div className=\"content-center text-center\">\n                <input \n                type=\"text\"\n                className=\"search-bar rounded-full px-3 content-center \"\n                placeholder=\"Example Tilburg\"\n                onChange={e => this.setState({'query': e.target.value})}\n                value={this.state.query}\n                onKeyPress={this.refreshWeather}\n            />\n            </div>\n\n            {/* Elementen hieronder alleen weergeven wanneer weather is geladen */}\n            {(typeof this.state.weather.main != \"undefined\") ?  (\n                <div>\n                    <div className=\"location-box\">\n                        <div className=\"location text-center text-red-100 font-sans md:text-3xl sm:text-xl\">{this.state.weather.name}, {this.state.weather.sys.country}</div>\n                    </div>\n                    <div className=\"weather-box text-center\">\n                        <div className=\"temp text-black-100 text-center font-sans md:text-5xl sm:text-xl\">\n                           <p className=\"text-red-100 text-center font-sans md:text-5xl sm:text-xl\">{Math.round(this.state.weather.main.temp)}°C</p> \n                        </div>\n                    </div>  \n                </div>\n            ) : ('')}          \n        </div>;\n    }\n}\n\nexport default Weather",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":41,"column":13,"nodeType":"52","messageId":"53","endLine":41,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":25,"column":15,"nodeType":"52","messageId":"53","endLine":25,"endColumn":19},{"ruleId":"46","replacedBy":"55"},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","severity":1,"message":"57","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":16},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'dateTime' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.",["58"],["59"],"'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]